public class ConvertBase 
    
    static Scanner keyboard = new Scanner(System.in)
    static char[] allChars = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}
    static num[] numberArray
    static num base1
    static num base2
    static num decimal
    static text number
    static text newNumber = ""
    static num quotient
    static num remainder
    static num total = 0

    public static void main() 

        output("Enter base to convert from: ")
        input base1

        if (base1 == 10) 
            output("Enter number to convert: ")
            input decimal
        
        else 
            output("Enter number to convert: ")
            input number
        endif
        
        output("Enter base to convert to: ")
        input base2

        if (base1 == 10) 
            fromDecimal()
            output(decimal + " base 10 is " + newNumber 
                    + " base " + base2)
        
        else if (base2 == 10) 
            toDecimal()
            output(number + " base " + base1 + " is " +
                    decimal + " base 10")
        
        else 
            toDecimal()
            fromDecimal()
            output(number + " base " + base1 + " is " +
                    newNumber + " base " + base2)
        endif
    return
    
    public static void fromDecimal() 
	quotient = decimal
        while (quotient != 0) 
            remainder = quotient % base2
            prepend(remainder)
            quotient = quotient / base2
        endwhile
    return
    
    public static void toDecimal() 
	toArray()
	multiplyArray()
	addArray()
	decimal = total
    return
	
    public static void prepend(num digit) 
        char nextDigit
	nextDigit = allChars[digit]
        newNumber = nextDigit + newNumber
    return
    
    public static void toArray() 
        numberArray = new num[number.length()]
        for (num i = 0; i < number.length(); i ++) 
            num x = 0
            boolean foundIt = false
            while (x < allChars.length && !foundIt) 
                if (number.charAt(i) == (allChars[x])) 
                    foundIt = true
                    numberArray[i] = x
                endif
                x++
            endwhile
        endfor
    return
    
    public static void multiplyArray() 
        num power = numberArray.length - 1
        for (num i = 0; i < numberArray.length; i++) 
            numberArray[i] *= (num)Math.pow(base1, power)
            power--
        endfor
    return
    
    public static void addArray() 
        for (num x = 0; x < numberArray.length; x++) 
            total += numberArray[x]
        endfor
    return
endClass
        
    

